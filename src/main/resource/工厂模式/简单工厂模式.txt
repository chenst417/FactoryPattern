一：简单工厂模式，又叫做静态工厂方法(Static Factory Method)模式
	不属于23种GOF设计模式之一。

	定义：
		由一个工厂对象决定创建哪一种产品类的实例。

	模式分析：
		a：将对象的创建和对象的业务处理相分离，降低了业务代码的耦合度，使两部分修改起来相对简单。
		b:在调用工厂类的工厂方法的时候简单，因为是个静态方法，可以直接通过类名直接调用。而且只需要传入一个简单的参数即可。
		     在实际的开发过程中，传入的参数可以通过xml文件进行配置，修改参数的时候不用修改源码。
		c:简单工厂模式相对于工厂类的职责过重，增加一个新的产品时，需要修改工厂类的工厂方法的判断逻辑，
		      违背了设计模式的开闭原则。
	   	d:简单工厂模式的重点在于：需要什么对象，只需要传入参数即可，无需关心对象的创建细节。

	优点：
		a:简单工厂模式提供了工厂方法进行对象的创建，客户端无需关心具体对象的创建过程，只需要使用产品即可，
		进行了职能的划分，使业务代价降低了一定的耦合度。
		b：客户端无需知道类的具体名字，只需知道获取类的参数即可，减少对复杂类名的记忆，以及复杂类的创建。
		c:通过配置文件配置参数的形式，不用修改源码就可以获得不同对象，提高了代码的灵活度
	缺点：
	  	a：工厂类集中了所有产品的创建逻辑，一旦出现问题，导致程序不可用。
	  	b：接口的实现类的数量可能会很多，在一定程度上增加了代码的复杂度和理解难度。
	    c:工厂类集中实现了所有产品的创建逻辑，在添加新的产品时，需要修改工厂类工厂方法的判断逻辑，
	                在产品较多时，增加了代码的复杂度，不易扩展和维护。
	应用案例：
		LogFactory  Calendar
	应用场景：
		工厂类创建的对象较少，客户端不关心对象的创建，只需要知道工厂方法的参数
