一：工厂方法模式，又叫
		工厂模式，
		虚拟构造器(Virtual Constructor)模式或者
		多态工厂模式(Polymorphic Factory Pattern)
	属于23种GOF设计模式之一。

	定义：
		工厂类负责定义创建对象的接口，具体对象的创建工作由实现工厂类的子类来进行创建。
	优点：
		a:在添加新的产品时，无需修改抽象产品提供的接口和抽象工厂类，无需修改客户端，
		     也无需修改其他的抽象产品的实现类和其他抽象工厂的实现类，
		     只需要添加一个具体产品类的实现和具体工厂类的实现，这样服务的扩展性非常好，
		     符合设计模式的“开闭原则”。
		b：工厂方法模式隐藏了具体产品的实例化细节，客户端无需关心，甚至不需要知道具体产品的类名，
		      只需知道具体产品对应的具体工厂类。
	缺点：
	  	a：添加新产品时，需要添加具体的产品类以及对应的具体工厂类，增加了类的个数，增加了系统负杂度，使系统不易维护。
	  	b：由于考虑到系统的扩展性，需要引入抽象层，客户端多用于抽象层实现，增加了系统的抽象性和理解难度，
	  	     在实现中可能会用到DOM、反射等技术，增加了实现难度。
	    c:
	应用案例：

	应用场景：
		一个类不需要知道他所需要的对象的类，在工厂方法模式中，客户端不需要知道具体类的类名，
		只需要知道对应的具体的工厂类即可，具体的产品对象类由对应的具体的工厂类来创建，
		客户端需要知道对应的具体的工厂类即可。